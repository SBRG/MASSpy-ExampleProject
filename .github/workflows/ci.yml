name: CI

on:
  push:
    branches:
    - master
    - ci-cd-tests
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
    - master
    - ci-cd-tests
  workflow_dispatch:
      inputs:
        color:
          descriptions: 'Use color'
          required: true
          default: 'true'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout repository
        id: checkout
        uses: actions/checkout@v2
      -
        name: Set up Python 3
        id: setup
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      -
        name: Lint via pre-commit hooks
        id: pre-commit
        uses: pre-commit/action@v2.0.0
        env:
          PRE_COMMIT_COLOR: ${{ github.event.inputs.color == 'false' && 'never' || 'always' }}

  tests:
    needs: lint
    runs-on: ${{ matrix.os }}
    name: "Test using Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7]

    steps:
      -
        name: Checkout repository
        id: checkout
        uses: actions/checkout@v2
      -
        name: Set up Python ${{ matrix.python-version }}
        id: setup
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      -
        name: Set Python ${{ matrix.python-version }} cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pydeps-${{ env.pythonLocation }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('pyproject.toml') }}
      -
        name : Install dependencies
        id: install-deps
        run: |
          python -m pip install --upgrade --upgrade-strategy eager pip setuptools
          python -m pip install --upgrade --upgrade-strategy eager tox tox-gh-actions coverage[toml]
      -
        name: Run tests on Python ${{ matrix.python-version }} via tox
        id: run-tox
        env:
          PY_COLORS: ${{ github.event.inputs.color == 'false' && 0 || 1 }}
        run: |
          python -m tox
      -
        name: Generate an XML report of coverage results
        id: cov-report-xml
        run: |
          python -m coverage xml
      -
        name: Upload coverage report to Codecov.io
        id: codecov-upload
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: ${{ secrets.ACTIONS_RUNNER_DEBUG }}
          fail_ci_if_error: true
